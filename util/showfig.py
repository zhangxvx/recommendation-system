import matplotlib.pyplot as plt
import numpy as np

np.set_printoptions(precision=3)
plt.rcParams['font.sans-serif'] = ['SimHei']  # 用来正常显示中文标签
plt.rcParams['axes.unicode_minus'] = False  # 用来正常显示负号
markers = ['+', 'o', '*', '.', 'x', 's', 'd', '^', 'v', '>', '<', 'p', 'h']
colors = ['b', 'r', 'g', 'y']
path = '../img/'


def compare(x, y, label):
    print(x, y)
    i = 0
    plt.figure(label['title'])
    for key in y:
        plt.plot(x, y[key], label=key, marker=markers[i], color=colors[i])
        i += 1
    plt.xlabel(label['x'])
    plt.ylabel(label['y'])
    plt.title(label['title'])
    plt.legend(loc='best')
    plt.savefig('{}{}.png'.format(path, label['y']))
    plt.show()


def show_hist(x, y, label):
    plt.figure('show_hist', figsize=(8, 5))
    y=np.around(y,3)
    react = plt.bar(x=np.arange(len(x)), height=y)
    for rect in react:
        height = rect.get_height()
        plt.text(rect.get_x() + rect.get_width() / 2, height, str(height), ha="center", va="bottom")
    plt.xlabel(label['x'])
    plt.ylabel(label['y'])
    plt.xticks(np.arange(len(x)), x)
    # plt.yticks(np.linspace(0.9,1.05))
    plt.ylim((0.88, 1.02))
    plt.title(label['title'])
    plt.show()


show_hist(['usercf-cos', 'usercf-aass', 'itemcf-cos', 'itemcf-aass', 'svd', 'mixed-cos-svd', 'mixed-aass-svd'],
          [1.010, 0.988, 0.974, 0.940, 0.932, 0.921, 0.915],
          label={'x': '', 'y': 'RMSE', 'title': "comparison of RMSE of experimental results", })
# show_hist(['usercf-cos', 'usercf-aass', 'itemcf-cos', 'itemcf-aass', 'svd', 'mixed-cos-svd', 'mixed-aass-svd'],
#           [0.803, 0.780, 0.759, 0.730, 0.731, 0.722, 0.718],
#           label={'x': '', 'y': 'MAE', 'title': "comparison of MAE of experimental results", })

measures = ["rmse", "mae"]
topks = [5, 10, 15, 20, 30, 40, 50, 60, 80]
###########################################################################
label = {
    'title': "comparison of RMSE of experimental results",
    'x': 'neighbors k',
    'y': 'RMSE'
}
legend = ['UserCF', 'ItemCF', 'UserAttrCF', 'UserSigmoidCF', 'UserMixedCF', 'UserMixedSigmoidCF']
eval_result = {
    'UserCF': [1.060, 1.026, 1.016, 1.012, 1.010, 1.010, 1.010, 1.011, 1.012],
    'UserSigmoidCF': [1.022, 0.995, 0.989, 0.988, 0.989, 0.991, 0.993, 0.995, 0.999],
}
label11 = {
    'title': "comparison of RMSE of experimental results",
    'x': 'neighbors k',
    'y': 'RMSE'
}
eval_result11 = {
    'ItemCF': [0.997, 0.975, 0.974, 0.977, 0.984, 0.989, 0.994, 0.997, 1.003],
    'ItemSigmoidCF': [0.963, 0.940, 0.939, 0.940, 0.946, 0.953, 0.958, 0.963, 0.970],
}
# compare(topks, eval_result, label)
# compare(topks, eval_result11, label11)
###########################################################################
label1 = {
    'title': "comparison of MAE of UserCF experimental results",
    'x': 'neighbors k',
    'y': 'MAE'
}
label2 = {
    'title': "comparison of MAE of ItemCF experimental results",
    'x': 'neighbors k',
    'y': 'MAE'
}
eval_result1 = {'UserCF': [0.840, 0.816, 0.808, 0.805, 0.803, 0.803, 0.804, 0.804, 0.806],
                'UserSigmoidCF': [0.803, 0.785, 0.781, 0.780, 0.781, 0.784, 0.786, 0.788, 0.792],

                }
eval_result2 = {'ItemCF': [0.768, 0.759, 0.759, 0.763, 0.770, 0.775, 0.780, 0.784, 0.790],
                'ItemSigmoidCF': [0.741, 0.730, 0.731, 0.733, 0.740, 0.746, 0.751, 0.755, 0.763],
                }

# compare(topks, eval_result1, label1)
# compare(topks, eval_result2, label2)

eval_result33 = {
    "baseline": [
        [[0.9344715509864459, 0.7382748254304855], [0.940218521872249, 0.7395962970441738],
         [0.9494785939513297, 0.7482369779975144], [0.9463105960406116, 0.7460280188237681],
         [0.9353459531678389, 0.7342432700238587]],
        [[0.9421372861638446, 0.7429059775689588], [0.9495945010742288, 0.7492932985657319],
         [0.9423400541623063, 0.7422138556130577], [0.9363751097680498, 0.7383644164605375],
         [0.9380909642904876, 0.7387308223828744]],
        [[0.9453131114983532, 0.7446864609728604], [0.9342953254268367, 0.7373429219269888],
         [0.9417193638669947, 0.7408813307917897], [0.9406299010271646, 0.7403764425014385],
         [0.9454563659481998, 0.7457031379720674]],
        [[0.9495990912729908, 0.7474585993875499], [0.9343473895061319, 0.7381228178947481],
         [0.9435016005678604, 0.7440013012371894], [0.936642786604311, 0.7381002091646874],
         [0.941668859063499, 0.7414330563591917]],
        [[0.9350028815220496, 0.7405184611138212], [0.9436430512920974, 0.7405309810240155],
         [0.9438588308223631, 0.7410515887054604], [0.9436369840891916, 0.747430031800586],
         [0.9413602289169954, 0.739616163244282]],
        [[0.9359656879997115, 0.7356896759424117], [0.9448645787900548, 0.744741710519778],
         [0.936194215587775, 0.7367206400092037], [0.9450962413916584, 0.7456760681706254],
         [0.9446656252488611, 0.7455985669369904]],
        [[0.9409058766001462, 0.742076974835417], [0.9458936054842955, 0.7451433121729155],
         [0.9334275368790582, 0.7325022940230425], [0.9447767620826005, 0.7455462877123389],
         [0.9424993454280984, 0.7440010139696026]],
        [[0.9456048783477885, 0.7458850340721335], [0.9379644486350512, 0.7384806487326996],
         [0.9488705065070259, 0.7471952346439892], [0.9309594972064438, 0.734205512656671],
         [0.9439181167213503, 0.7437281286234961]],
        [[0.9498084888405832, 0.7477987375370819], [0.9391777397511403, 0.7406555741494562],
         [0.9447535695074066, 0.7444723248192471], [0.9331798847399418, 0.7359873861541426],
         [0.9417025267286606, 0.7418337383808261]]],
    "svd": [
        [[0.940297630750759, 0.7406693589039802], [0.938510920905887, 0.7382076431070783],
         [0.9466683322365778, 0.7445381519070988], [0.9387382941712772, 0.7400342769383272],
         [0.9430961366717415, 0.7456005549985631]],
        [[0.9403527182748649, 0.7441957934865855], [0.9491096862810361, 0.7455218687056786],
         [0.9378037346735362, 0.7393083419026362], [0.9376537204270377, 0.738241744031075],
         [0.9430376319102822, 0.7431125208614325]],
        [[0.9385891012629893, 0.739479740241909], [0.9337531870382486, 0.7380478833464946],
         [0.9461128862950118, 0.7443213145571521], [0.9460661962479788, 0.7468153531542782],
         [0.9428767237678295, 0.7402086394303431]],
        [[0.9360934085940559, 0.7363384985935524], [0.9451430776990599, 0.7450879949774838],
         [0.9431683273508796, 0.7431032587797552], [0.9334417846290407, 0.7355987562318813],
         [0.9494899563152759, 0.7497357796585095]],
        [[0.9502029358031554, 0.7490414782432059], [0.9423018339883772, 0.7455022254005398],
         [0.9484679641715675, 0.7461339086983968], [0.9363098241997121, 0.7377284927519113],
         [0.9322681315830639, 0.7333297398680607]],
        [[0.9438673703711338, 0.7444179242676193], [0.9489907737968014, 0.7500802716842828],
         [0.9415422576764231, 0.7392524242779512], [0.9368959715614499, 0.7389421154788599],
         [0.9354523109575413, 0.7368280202877837]],
        [[0.9448719848114103, 0.7436306012367228], [0.9373046156573084, 0.7401497645044282],
         [0.9365338943526703, 0.7401533696893919], [0.9544342513065088, 0.750693443081333],
         [0.9337377207066546, 0.734288030902809]],
        [[0.9481932594204664, 0.747625359077219], [0.9389048929544981, 0.7368513789476762],
         [0.940348581713905, 0.7412241553963528], [0.931492365063194, 0.7382237534988176],
         [0.947144725995583, 0.7447472015775979]],
        [[0.9459510580057319, 0.7480599436643827], [0.9472807656613728, 0.7473412091786138],
         [0.9424939738520308, 0.7422718927595972], [0.9345810024007448, 0.7354980760905341],
         [0.9410260473575078, 0.7395105270569351]]],
    "svdpp": [
        [[0.9420041451130458, 0.7429151615390674], [0.9407245869316072, 0.738511711406473],
         [0.9396232497525813, 0.739759825960452], [0.9467546371151451, 0.7482303556646736],
         [0.9396228475937003, 0.7406050566839087]],
        [[0.9393944357040847, 0.7383261261928509], [0.9424361933416081, 0.7436028705981574],
         [0.9374322496209697, 0.7400334228532749], [0.9452908269830868, 0.743079424564239],
         [0.9426762022058971, 0.7444295713124028]],
        [[0.9465227323391437, 0.7471553668279939], [0.9483025734305193, 0.7465990297225203],
         [0.936705175472523, 0.7377190653317258], [0.940244486409686, 0.7399781808057295],
         [0.9365081989011538, 0.7385596744882733]],
        [[0.9360901967332875, 0.7367258147823544], [0.9451075216214918, 0.7454429701240324],
         [0.9431015803695427, 0.7439348622491647], [0.9447552173010278, 0.7438799744582475],
         [0.9392183865297142, 0.739950903420848]],
        [[0.947237315651012, 0.7467474562211918], [0.9473895066884802, 0.74782684317865],
         [0.9385064302292807, 0.7388453173963963], [0.9358158588060554, 0.7369321717371952],
         [0.9379626032249831, 0.7375053862767351]],
        [[0.9459767526003083, 0.7437605677837328], [0.9341018685452815, 0.7367403495681744],
         [0.9377168884811204, 0.737653235813715], [0.9516089431347413, 0.7490327044081417],
         [0.9371443352689236, 0.7417678092626262]],
        [[0.9455219451026552, 0.7444276576626981], [0.9468072584712823, 0.7479489756841006],
         [0.9425938477453606, 0.7423601976907495], [0.9395233720505992, 0.738973212220882],
         [0.9339396023455724, 0.7361495452321031]],
        [[0.930972770810287, 0.7329666441002181], [0.9487702444163915, 0.7492874875767607],
         [0.9512482286767008, 0.7500278480646994], [0.93670855644196, 0.737393584245293],
         [0.9418617082857943, 0.7411482733495943]],
        [[0.9391507574709469, 0.7413093699722382], [0.9385895943019714, 0.7422168999036092],
         [0.932957469673267, 0.7347465815589183], [0.949089365107585, 0.7460151427503859],
         [0.9489898815592949, 0.7467330398232458]]]}
eval_result3 = {}
for eval in eval_result33:
    eval_result3[eval] = np.mean(eval_result33[eval], axis=1)
print(eval_result3)
label3 = {
    'title': "comparison of MAE of SVD experimental results",
    'x': 'factors num',
    'y': 'MAE'
}
factors = [i for i in range(5, 50, 5)]
# compare(factors, eval_result3, label3)
